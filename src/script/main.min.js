const form = document.querySelector('#form');
const btnDeliv = document.querySelector('#buttonDeliv');
const btnClear = document.querySelector('#btnClear');
//const name = document.querySelector('#form.name');
var modal = document.querySelector('#modal');
var span = document.querySelector('.model__btn');
var modelTxt = document.querySelector('.model__txt');
btnDeliv.addEventListener('click', function (e) {
    e.preventDefault();

    if (validateForm(form)) {

        var formData = new FormData();

        formData.append('name', form.elements.name.value);
        formData.append('mobile', form.elements.mobile.value);
        formData.append('street', form.elements.street.value);
        formData.append('house', form.elements.house.value);
        formData.append('floor', form.elements.floor.value);
        formData.append('textarea', form.elements.text.value);
        formData.append('to', 'fantomsib@hotmail.com');

        const xhr = new XMLHttpRequest();
        xhr.responseType = 'json';
        xhr.open('POST', 'https://webdev-api.loftschool.com/sendmail');
        //xhr.setRequestHeader('X-Requestd-With', 'XMLHttpRequest');
        xhr.send(formData);

        xhr.addEventListener('load', function () {
            if (xhr.status >= 400) {
                modelTxt.textContent = 'Не удалось отправить заявку, код ошибки' + xhr.status;
                modelTxt.style.textAlign = 'center';
            }
            modal.style.display = "flex";
            form.reset();

            modal.onclick = function () {
                modal.style.display = "none";
            };

            window.onclick = function (event) {
                if (event.target == modal) {
                    modal.style.display = "none";


                }
            };

        });
    }
});

function validateForm(form) {
    var valid = true;
    if (!validateField(form.elements.name)) {
        valid = false;
    }
    if (!validateField(form.elements.mobile)) {
        valid = false;
    }
    if (!validateField(form.elements.street)) {
        valid = false;
    }
    if (!validateField(form.elements.house)) {
        valid = false;
    }

    if (!validateField(form.elements.text)) {
        valid = false;
    }

    return valid;

}

function validateField(field) {
    if (!field.checkValidity()) {
        field.nextElementSibling.textContent = field.validationMessage;
        return false;
    } else {
        field.nextElementSibling.textContent = '';
    }
    return true;
}

btnClear.addEventListener('click', function (event) {
    event.preventDefault();
    form.reset();
});


////////////input phone
const phone = document.querySelector('#phone');
phone.addEventListener('keydown', function (event) {
    let isDigit = false; //флаг
    let isDash = false;
    let isControl = false;
    let isTrusted = false;



    if (event.key >= 0 || event.key <= 9) {
        isDigit = true;
    }

    if (event.key == '-') {
        isDash = true;
    }

    if (event.key == 'ArrowLeft' || event.key == 'ArrowRight' || event.key == 'Backspace') {
        isControl = true;
    }

    if (event.key == "+") {
        isTrusted = true;
    }


    if (isDigit == false && !isDash && !isControl && !isTrusted) { //isDigit == false = (!isDigit) ! = non 
        event.preventDefault();
    }

});





//(function () {


const rewievsItems = document.querySelectorAll('.reviews__items');
var slideIndex = 1;
showSlides(slideIndex);

function currentSlide(n) {
    showSlides(slideIndex = n);
}

function showSlides(n) {
    var i;

    var slides = document.getElementsByClassName('commit__items');
    var dots = document.getElementsByClassName('reviews__items');
    if (n > slides.length) {
        slideIndex = 1;
    }
    if (n < 1) {
        slideIndex = slides.length;
    }
    for (i = 0; i < slides.length; i++) {
        slides[i].style.display = "none";
    }
    for (i = 0; i < dots.length; i++) {
        dots[i].classList.remove("reviews__items--active");
    }
    slides[slideIndex - 1].style.display = "flex";
    dots[slideIndex - 1].classList.add("reviews__items--active");
}



//})();

/*
(function () {
    const video = document.querySelector('.work__film');
    const juice = document.querySelector('.control__list-playstatus');
    const point = document.querySelector('.control__point')
    const btn = document.querySelector('.control__list-play');
    const volumStop = document.querySelector('.control__list-volum');


    function togglePlayPause() {
        if (video.paused) {

            btn.classList.add('control__list-play--active');

            video.play();
        } else {
            btn.classList.remove('control__list-play--active');

            video.pause();
        }
    }

    btn.onclick = function () {
        togglePlayPause();
    };

    video.addEventListener('timeupdate', function () {
        var juicePoc = video.currentTime / video.duration;
        point.style.left = juicePoc * 100 + "%";

        if (video.endend) {
            btn.className = 'play';
        }

        if (point.style.left == 100 + '%') {
            point.style.left = 0 + "%";
        }

    });



    volumStop.muted = true;


    volumStop.addEventListener('clic', function () {
        volumStop.muted = true;
    });

})();
*/



(function () {

    let player;
    
    function onYouTubeIframeAPIReady() {
        player = new YT.Player("yt-player", {
           width: "660",
          
            height: "405",
            videoId: "W_MKH45wUBA",
            playerVars: {
                controls: 0,
                disablekb: 0,
                showinfo: 0,
                rel: 0,
                autoplay: 0,
                modestbranding: 0
            },
            events: {
                onReady: onPlayerReady,
                onStateChange: onPlayerStateChange
            }
        });
    }
    
    function onPlayerReady(event) {
        const duration = player.getDuration();
        let interval;
        updateTimerDisplay();
    
        $(".player").removeClass("hidden");
    
        clearInterval(interval);
    
        interval = setInterval(() => {
            const completed = player.getCurrentTime();
            const percents = (completed / duration) * 100;
             
    
    
        
    
            changeButtonPosition(percents);
    
            updateTimerDisplay();
        }, 1000);
    }
    
    function onPlayerStateChange(event) {
        const playerButton = $(".player__start");
        switch (event.data) {
            case 1:
                $(".player__wrapper").addClass("active");
                playerButton.addClass("paused");
                break;
            case 2:
                playerButton.removeClass("paused");
                break;
        }
    }
    
    $(".player__start").on("click", e => {
        const playerStatus = player.getPlayerState(); // 0 - ended, 1 - played, 2 - paused ...
    
        if (playerStatus !== 1) {
            player.playVideo();
        } else {
            player.pauseVideo();
        }
    });
    
    
    $(".player__playback").on("click", e => {
        e.preventDefault();
        const bar = $(e.currentTarget);
        const newButtonPosition = e.pageX - bar.offset().left;
        const clickedPercents = (newButtonPosition / bar.width()) * 100;
        const newPlayerTime = (player.getDuration() / 100) * clickedPercents;
    
        changeButtonPosition(clickedPercents);
        player.seekTo(newPlayerTime);
    });
    
    $(".player__splash").on("click", e => {
        player.playVideo();
      
    });
    
    function changeButtonPosition(percents) {
        $(".player__playback-button").css({
            left: `${percents}%`
    });
    
       
    }
    
    function updateTimerDisplay() {
        $(".player__duration-completed").text(formatTime(player.getCurrentTime()));
        $(".player__duration-estimate").text(formatTime(player.getDuration()));
    }
    
    function formatTime(time) {
        const roundTime = Math.round(time);
    
        const minutes = Math.floor(roundTime / 60);
        const seconds = roundTime - minutes * 60;
        const formatedSeconds = seconds < 10 ? `0${seconds}` : seconds;
    
        return minutes + ":" + formatedSeconds;
    }
    
    })();
    
    
    





















(function () {

    const menu = document.querySelector('.menu');
    const accoItem = document.querySelectorAll('.menu__items');
    const accoItemLength = accoItem.length;


    menu.addEventListener('click', function (e) {
        for (let i = 0; i < accoItemLength; i++) {
            accoItem[i].classList.remove('menu__items--active');
        }

    });


    for (let i = 0; i < accoItemLength; i++) {

        accoItem[i].addEventListener('click', function (e) {
            e.stopPropagation();
            e.preventDefault();


            if (accoItem[i].classList.contains('menu__items--active')) {
                accoItem[i].classList.remove('menu__items--active')
            } else {
                for (let i = 0; i < accoItemLength; i++) {
                    accoItem[i].classList.remove('menu__items--active');
                }
                accoItem[i].classList.add('menu__items--active');
            }
        });
    }


})();



(function () {

    var slider = document.querySelector('.bars__slider');
    var left = document.querySelector('.flash__slider-left');
    var right = document.querySelector('.flash__slider-right');
    var sliderListLenght = slider.children.length;
    var translate = 0;
    var maxTrans = -100 * (sliderListLenght - 1);

    right.addEventListener('click', function (e) {
        e.preventDefault();
        if (translate != maxTrans) {
            translate -= 100;
            slider.style.transform = 'translateX(' + translate + '%)';
        } else {
            translate = 0;
            slider.style.transform = 'translateX(' + translate + ' %)';

        }

    });


    left.addEventListener('click', function (e) {
        e.preventDefault();
        if (translate != 0) {
            translate += 100;
            slider.style.transform = 'translateX(' + translate + '%)';
        } else {
            translate = maxTrans;
            slider.style.transform = 'translateX(' + translate + '%)';
        }

    });

})();





(function () {

    const nav = document.querySelector('#nav');
    const clos = document.querySelector('#closed');
    const ham = document.querySelector('#ham');


    ham.addEventListener('click', function (event) {
        nav.style.display = 'flex';
        event.preventDefault();
    });



    clos.addEventListener('click', function (event) {
        nav.style.display = 'none';
        event.preventDefault();
    });

})();

////////////////team slider

const team = document.querySelector('.team');
const teamItems = document.querySelectorAll('.team__items');
const teamItemsLegth = teamItems.length;


team.addEventListener('click', function (e) {
    for (let i = 0; i < teamItemsLegth; i++) {
        teamItems[i].classList.remove('team__items--active');
    }
});
for (let i = 0; i < teamItemsLegth; i++) {
    teamItems[i].addEventListener('click', function (e) {
        e.stopPropagation();
        e.preventDefault();

        if (teamItems[i].classList.contains('team__items--active')) {
            (teamItems[i].classList.remove('team__items--active'));
        } else {
            for (let i = 0; i < teamItemsLegth; i++) {
                teamItems[i].classList.remove('team__items--active');
            }
            teamItems[i].classList.add('team__items--active');


        }
    });
}

////scroll
const sections = $(".section");
const display = $(".maincontent");



let inscroll = false;
const md = new MobileDetect(window.navigator.userAgent);
const isMobile = md.mobile();


const switchActiveClassInSideMenu = menuItemsIndex => {
    $('.sidebar__items').eq(menuItemsIndex).addClass('sidebar__items--active').siblings().removeClass('sidebar__items--active');
};

const performTransition = sectionsEq => {

    if (inscroll) return;



    inscroll = true;
    const position = `${sectionsEq * -100}%`;

    sections.eq(sectionsEq).addClass('active').siblings().removeClass('active');
    display.css({
        transform: `translateY(${position})`
    });

    setTimeout(() => {
        switchActiveClassInSideMenu(sectionsEq);
        inscroll = false;
    }, 1000 + 300); //время танзишина + время за которое успоется инерция 

};


const scrollToSection = direction => {
    const activeSection = sections.filter(".active");
    const nextSection = activeSection.next();
    const prevSection = activeSection.prev();

    if (direction === "next" && nextSection.length) {
        performTransition(nextSection.index());
    }

    if (direction === "prev" && prevSection.length) {
        performTransition(prevSection.index());
    }
};


$(".wrapper").on("wheel", e => {
    const deltaY = e.originalEvent.deltaY;

    if (deltaY > 0) {
        scrollToSection("next");
    }
    if (deltaY < 0) {
        scrollToSection("prev");
    }
});

$('.wrapper').on('touchemove', e => {
    e.preventDefault();
});


$(document).on("keydown", e => {
    switch (e.keyCode) {
        case 38:
            scrollToSection("prev");
            break;
        case 40:
            scrollToSection("next");
            break;
    }
});

$("[data-scroll-to]").on("click", e => {
    e.preventDefault();
    const target = $(e.currentTarget).attr("data-scroll-to");

    performTransition(target);

    nav.style.display = 'none';


});



if (isMobile) {
    $(window).swipe({
        swipe: function (event, direction, distance, duration, fingerCount, fingerData) {

            const nextOrPrev = direction === "up" ? "next" : "prev";
            scrollToSection(nextOrPrev);
        }
    });
}


/////map YANDEX

ymaps.ready(init);

var placemarks = [{
            latitude: 55.75876654824937,
            longitude: 37.58285137724552,
            hintContent: '<div class="map__hint">Кудринская площадь</div>',
            balloonContent: [
                '<div class="map__ballon">',
                '<img class="map__chocco-img" src="./img/barss-768.png" alt= "chocco"/>',
                'Лучшие батончики. Заохдите по адрессу: Кудринская площадь',
                '</div>'
            ]
        },
        {
            latitude: 55.7580405685554,
            longitude: 37.62143227171401,
            hintContent: '<div class="map__hint">Театральный проезд 2</div>',
            balloonContent: [
                '<div class="map__ballon">',
                '<img class="map__chocco-img" src="./img/barss-768.png" alt= "chocco"/>',
                'Лучшие батончики. Заохдите по адрессу: Кудринская площадь',
                '</div>'
            ]
        },
        {
            latitude: 55.749642426290684,
            longitude: 37.60503861021099,
            hintContent: '<div class="map__hint">ул.Знаменка 13с4</div>',
            balloonContent: [
                '<div class="map__ballon">',
                '<img class="map__chocco-img" src="./img/barss-768.png" alt= "chocco"/>',
                'Лучшие батончики. Заохдите по адрессу: Кудринская площадь',
                '</div>'
            ]
        },
        {
            latitude: 55.74714925612337,
            longitude: 37.58023354123971,
            hintContent: '<div class="map__hint">2-й Смоленский переулок 4/3</div>',
            balloonContent: [
                '<div class="map__ballon">',
                '<img class="map__chocco-img" src="./img/barss-768.png" alt= "chocco"/>',
                'Лучшие батончики. Заохдите по адрессу: Кудринская площадь',
                '</div>'
            ]
        }
    ],


    geoObjects = [];


function init() {
    var map = new ymaps.Map('map', {
        center: [55.753406085486624, 37.59999999999995],
        zoom: 15,
        controls: [],
        //  controls: [''],
        behaviors: ['drag']
    });


    for (var i = 0; i < placemarks.length; i++) {
        geoObjects[i] = new ymaps.Placemark([placemarks[i].latitude, placemarks[i].longitude], {
            hintContent: placemarks[i].hintContent,
            balloonContent: placemarks[i].balloonContent.join('')
        }, {

            iconLayout: 'default#image',
            iconImageHref: './img/chocco__map.png',
            iconImageSize: [46, 57],
            iconImageOffset: [-23, -57],

        });

    }


    var clusterer = new ymaps.Clusterer({
        clusterIcons: [{
            href: './img/barss-768.png',
            size: [100, 100],
            offset: [-50, -50]
        }],
        clusterIconContentLayout: null
    });


    map.geoObjects.add(clusterer);

    clusterer.add(geoObjects);
}